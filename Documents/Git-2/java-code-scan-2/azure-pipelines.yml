# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  name: 'Default'

#pool:
#  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=javacodescan -DskipTests'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package -DskipTests'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'artifact-cb'
    publishLocation: 'pipeline'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    artifactName: 'artifact-cb'
    targetPath: '$(Pipeline.Workspace)'
    

stages:
- stage: validate
  jobs:
  - job: validate 
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: 'install'
      inputs:
        terraformVersion: '1.2.1'
    - task: TerraformTaskV3@3
      displayName: 'init' 
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'terraform-rg-spn'
        backendAzureRmResourceGroupName: 'terraform-rg'
        backendAzureRmStorageAccountName: 'cloudbinary'
        backendAzureRmContainerName: 'cloudbinarycontainer'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV3@3
      displayName: validate
      inputs:
        provider: 'azurerm'
        command: 'validate'
    
    - task: TerraformTaskV3@3
      displayName: 'plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'terraform-rg-spn'
    
    - task: TerraformTaskV3@3
      displayName: 'apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        environmentServiceNameAzureRM: 'terraform-rg-spn'
